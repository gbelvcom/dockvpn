#!/bin/sh
set -e

[ -d /dev/net ] || mkdir -p /dev/net
[ -c /dev/net/tun ] || mknod /dev/net/tun c 10 200

cd /etc/openvpn

# Генерация ключей и сертификатов
if [ ! -f dh.pem ]; then
    openssl dhparam -out dh.pem 4096
fi

if [ ! -f key.pem ]; then
    openssl genrsa -out key.pem 4096
    chmod 600 key.pem
fi

if [ ! -f csr.pem ]; then
    openssl req -new -key key.pem -out csr.pem -subj /CN=OpenVPN/
fi

if [ ! -f cert.pem ]; then
    openssl x509 -req -in csr.pem -out cert.pem -signkey key.pem -days 24855
fi

# Генерируем tls-crypt ключ, если его нет
if [ ! -f tls-auth.key ]; then
    openvpn --genkey --secret tls-auth.key
fi

# Конфиг OpenVPN TCP 443
if [ ! -f tcp443.conf ]; then
    cat >tcp443.conf <<EOF
server 192.168.255.0 255.255.255.128
verb 3
duplicate-cn
key key.pem
ca cert.pem
cert cert.pem
dh dh.pem
tls-crypt tls-auth.key
keepalive 10 60
persist-key
persist-tun
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 1.1.1.1"
push "block-outside-dns"
push "redirect-gateway def1 bypass-dhcp"
cipher AES-256-CBC
auth SHA512
tls-version-min 1.2
push "route 192.168.255.0 255.255.255.128 net_gateway"
proto tcp-server
port 443
dev tun443
# status openvpn-status-443.log
status /dev/null
log /dev/null
verb 0
EOF
fi

# Конфиг OpenVPN UDP 1194
if [ ! -f udp1194.conf ]; then
    cat >udp1194.conf <<EOF
server 192.168.255.128 255.255.255.128
verb 3
duplicate-cn
key key.pem
ca cert.pem
cert cert.pem
dh dh.pem
tls-crypt tls-auth.key
keepalive 10 60
persist-key
persist-tun
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 1.1.1.1"
push "block-outside-dns"
push "redirect-gateway def1 bypass-dhcp"
cipher AES-256-CBC
auth SHA512
tls-version-min 1.2
push "route 192.168.255.0 255.255.255.128 net_gateway"
proto udp
port 1194
dev tun1194
# status openvpn-status-1194.log
status /dev/null
log /dev/null
verb 0
EOF
fi

MY_IP_ADDR=$(curl -s http://ifconfig.me)
[ "$MY_IP_ADDR" ] || {
    echo "Sorry, I could not figure out my public IP address."
    exit 1
}

# Генерация клиентского .ovpn файла
if [ ! -f client.ovpn ]; then
    cat >client.ovpn <<EOF
client
nobind
dev tun
redirect-gateway def1

<key>
$(cat key.pem)
</key>
<cert>
$(cat cert.pem)
</cert>
<ca>
$(cat cert.pem)
</ca>
<dh>
$(cat dh.pem)
</dh>

<connection>
remote $MY_IP_ADDR 1194 udp
</connection>

<connection>
remote $MY_IP_ADDR 443 tcp-client
</connection>
EOF
fi

# Раздача .ovpn через браузер
if [ ! -f client.http ]; then
    cat >client.http <<EOF
HTTP/1.0 200 OK
Content-Type: application/x-openvpn-profile
Content-Length: $(wc -c < client.ovpn)

$(cat client.ovpn)
EOF
fi

# Запускаем iptables
iptables -t nat -A POSTROUTING -s 192.168.255.0/24 -o eth0 -j MASQUERADE
iptables -A INPUT -p tcp --dport 8080 -m connlimit --connlimit-above 1 -j REJECT

# Запускаем obfsproxy для маскировки OpenVPN
obfs4proxy -enableLogging -logLevel=ERROR -proxy -listen 0.0.0.0:8443 -target 127.0.0.1:1194 &
obfs4proxy -enableLogging -logLevel=ERROR -proxy -listen 0.0.0.0:9443 -target 127.0.0.1:443 &

# Запускаем OpenVPN серверы
# touch tcp443.log udp1194.log http8080.log
# while true; do openvpn tcp443.conf; done >> tcp443.log &
# while true; do openvpn udp1194.conf; done >> udp1194.log &
# tail -F *.log
while true; do openvpn tcp443.conf > /dev/null 2>&1; done &
while true; do openvpn udp1194.conf > /dev/null 2>&1; done &
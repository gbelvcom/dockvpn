#!/bin/sh
set -e

# Ensure /dev/net/tun exists
[ -d /dev/net ] || mkdir -p /dev/net
[ -c /dev/net/tun ] || mknod /dev/net/tun c 10 200

cd /etc/openvpn
# Placeholder file to indicate configuration presence
touch placeholder

# Generate Diffie-Hellman parameters if missing
[ -f dh.pem ] || openssl dhparam -out dh.pem 2048

# Generate key and certificate if missing
[ -f key.pem ] || openssl genrsa -out key.pem 2048
chmod 600 key.pem
[ -f csr.pem ] || openssl req -new -key key.pem -out csr.pem -subj "/CN=OpenVPN/"
[ -f cert.pem ] || openssl x509 -req -in csr.pem -out cert.pem -signkey key.pem -days 24855

# Create OpenVPN  missing
[ -f tcp443.conf ] || cat >tcp443.conf <<EOF

verb 0

key key.pem
tls-client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6"
ca cert.pem
remote-cert-tls server
cert cert.pem


persist-key
persist-tun
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 1.1.1.1"
push "redirect-gateway def1 bypass-dhcp"

proto tcp-server
local 0.0.0.0
explicit-exit-notify 1
port 443
dev tun443
status openvpn-status-443.log
EOF

[ -f udp1194.conf ] || cat >udp1194.conf <<EOF

verb 0

key key.pem
tls-client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6"
ca cert.pem
remote-cert-tls server
cert cert.pem


persist-key
persist-tun
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 1.1.1.1"
push "redirect-gateway def1 bypass-dhcp"

proto udp
local 0.0.0.0
explicit-exit-notify 1
port 1194
dev tun1194
status openvpn-status-1194.log
EOF

# Fetch public IP address
MY_IP_ADDR=$(curl -s http://myip.enix.org/REMOTE_ADDR)
[ "$MY_IP_ADDR" ] || {
    echo "Could not determine public IP. Please check connectivity."
    exit 1
}

# Generate client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6" configuration
[ -f client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6".ovpn ] || cat >client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6".ovpn <<EOF
client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6"
nobind
dev tun
redirect-gateway def1 bypass-dhcp

<key>
$(cat key.pem)
</key>
<cert>
$(cat cert.pem)
</cert>
<ca>
$(cat cert.pem)
</ca>


<connection>
remote $MY_IP_ADDR 1194 udp
</connection>

<connection>
remote $MY_IP_ADDR 443 tcp-client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6"
</connection>
EOF

# Serve the client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6" configuration via HTTP
[ -f client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6".http ] || cat >client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6".http <<EOF
HTTP/1.0 200 OK
Content-Type: application/x-openvpn-profile
Content-Length: $(wc -c client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6".ovpn)

$(cat client
pull-filter ignore "ifconfig-ipv6"
pull-filter ignore "route-ipv6".ovpn)
EOF

# Configure NAT for VPN traffic
iptables -t nat -A POSTROUTING -s 192.168.255.0/24 -o eth0 -j MASQUERADE

# Touch log files
touch tcp443.log udp1194.log http8080.log

# Start OpenVPN servers
while true; do openvpn tcp443.conf; done >> tcp443.log &
while true; do openvpn udp1194.conf; done >> udp1194.log &

tail -F *.log
